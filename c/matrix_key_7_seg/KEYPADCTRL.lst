     1: /*********************************************************************
     2: **********************************************************************
     3: *****                                                             ****
     4: *****         L A B C E N T E R    E L E C T R O N I C S          ****
     5: *****                                                             ****
     6: *****                  PIC 16F87X Keypad Scanner                  ****
     7: *****                                                             ****
     8: **********************************************************************
     9: *********************************************************************/
    10: 
    11: // Rows are connected to Port C 
    12: // Columns are connected to Port A with external pull-up resistors.
    13: 
    14: #include "calc.h"
    15: #include "pic.h"
    16: 
    17: CHAR keycodes[16] = {'7','8','9','/','4','5','6','*','1','2','3','-','.','0','=','+'};
    18: 
    19: CHAR keypadread()
    20: // Find a key, wait for
    21: // it to be released and return.
    22:  { CHAR key = scankeypad();
    23:    if (key)
    24:       while (scankeypad() != 0)
    25:          /* Nothing */  ;  
    26:    return key;
    27:  } 
    28: 
    29: CHAR scankeypad()
    30: // Scan the keypad for a keypress.
    31: // Return 0 for no press or the char pressed.
    32:  { INT8 row,col,tmp;
    33:    CHAR key=0;
    34: 
    35:    // Disable ADC functionality on Port A
    36:    ADCON1 = 6; 
    37: 
    38:    // Initialise Port for input, and PORTC for output
    39:    TRISA = PORTC = 0xFF;
    40:    TRISC = 0;
    41: 
    42:    for (row=0; row < KEYP_NUM_ROWS; row++)
    43:     { // Drive appropriate row low and read columns:
    44:       PORTC = ~(1 << row);
    45:       asm ( "NOP");     
    46:       tmp = PORTA;
    47:     
    48:       // See if any column is active (low):
    49:       for (col=0; col<KEYP_NUM_COLS; ++col)
    50:          if ((tmp & (1<<col)) == 0)
    51:           { INT8 idx = (row*KEYP_NUM_COLS) + col;
    52:             key = keycodes[idx]; 
    53:             goto DONE;
    54:           }
    55:     }
    56:    DONE:
    57: 
    58:    // Disable Port Drive and return.
    59:    TRISC = 0xFF;
    60:    return key;
    61:  }
    62: 
    63: 
    64: 
