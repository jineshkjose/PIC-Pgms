     1: #include<pic.h>
     2: #include "dd_lcd.h"
     3: 
     4: 
     5: 
     6: #define ac_dc_relay RD2
     7: #define sw1 RD3
     8: #define led_green RD4
     9: #define led_red RD5
    10: 
    11: #define on 1
    12: #define off 0
    13: 
    14: 
    15: #define open 0
    16: #define close 1
    17: 
    18: 
    19: 
    20: 
    21: float data=0,data1=0,datat=0,datar=0,temp=0;
    22: unsigned char adc;
    23: 
    24: void read_adc_1(void);
    25: int ac_flag=0,dc_flag=0,flag3=0,flag4=0,i=0;
    26: 
    27: int main(void)
    28: {
    29:         TRISA=0xFF;
    30:         //TRISC=0xFF;
    31:         //TRISD=0X00;
    32: TRISD0=TRISD1=TRISD2=TRISD4=TRISD5=0;
    33: TRISD3=1;
    34: ac_dc_relay=off;
    35: led_green=off;
    36: led_red=on;
    37: 
    38: //      PORTD=0X00;
    39:         ADCON0=0X81;
    40:         ADCON1=0X00;
    41:         Config_IO();
    42:         Init_LCD();
    43: Set_LCD_Command(LCD_ROW1);
    44: //LCD_Scrol_String(" DIGITAL VOLT METER ");
    45:         clr_lcd();
    46: 
    47: 
    48: 
    49: while(1)
    50: {
    51: 
    52: if(sw1==on)
    53: {
    54: ac_dc_relay=on;
    55: led_green=on;
    56: ac_flag=1;
    57: dc_flag=0;
    58: }
    59: else
    60: {
    61: ac_dc_relay=off;
    62: led_green=off;
    63: ac_flag=0;
    64: dc_flag=1;
    65: }
    66: 
    67: 
    68: read_adc_1();
    69: }
    70: 
    71: }
    72: 
    73: 
    74: void read_adc_1(void)
    75: {
    76: ADRESH=0x00;
    77:         CHS2 = 0;
    78:     CHS1 = 0;
    79:     CHS0 = 0;
    80: for (i=0;i<250;++i);
    81:         ADGO=1;
    82: while(ADGO);
    83:         adc=0;
    84:         
    85:         adc = ADRESH;
    86:         data = ((5.0/255)*adc);
    87:         datat=(data*199)+data;
    88: Set_LCD_Command(LCD_ROW2);
    89: //      lcd_num_float(datat);
    90: //lcd_puts(" ");
    91: //lcd_num_float(data);
    92: //lcd_puts(" ");
    93: 
    94: if(temp!=datat)
    95: {
    96: temp=datat;
    97: if(data<0.10)
    98: {
    99: RD0=1;
   100: RD1=0;
   101: 
   102: 
   103: 
   104: ADRESH=0x00;
   105:         CHS2 = 0;
   106:     CHS1 = 0;
   107:     CHS0 = 1;
   108: for (i=0;i<250;++i);
   109:         ADGO=1;
   110: while(ADGO);
   111:         adc=0;  
   112:         adc = ADRESH;
   113:         data1 = ((5.0/255)*adc);
   114:         datar=(data1*3)+data1;
   115:         lcd_num_float(datar);
   116: 
   117: if(ac_flag==1)
   118: lcd_puts(" AC V");
   119: else if(dc_flag==1)
   120: lcd_puts(" DC V");
   121: 
   122: 
   123: RD0=0;
   124: 
   125: }
   126: else if((data>0.10)&&(data<1.01))
   127: {
   128: RD1=1;
   129: RD0=0;
   130: 
   131: ADRESH=0x00;
   132:         CHS2 = 0;
   133:     CHS1 = 0;
   134:     CHS0 = 1;
   135: for (i=0;i<250;++i);
   136:         ADGO=1;
   137: while(ADGO);
   138:         adc=0;  
   139:         adc = ADRESH;
   140:         data1 = ((5.0/255)*adc);
   141:         datar=(data1*39)+data1;
   142:         lcd_num_float(datar);
   143: if(ac_flag==1)
   144: lcd_puts(" AC V");
   145: else if(dc_flag==1)
   146: lcd_puts(" DC V");
   147: RD1=0;
   148: }
   149: 
   150: else if(data>1.01)
   151: {
   152: 
   153: RD0=RD1=0;
   154: 
   155:         lcd_num_float(datat);
   156: if(ac_flag==1)
   157: lcd_puts(" AC V");
   158: else if(dc_flag==1)
   159: lcd_puts(" DC V");
   160: 
   161: 
   162: }
   163: 
   164: }
   165: 
   166: 
   167: }
